# Created by Manuel Blum on 2011-05-25.
# Copyright 2013 University of Freiburg.

CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(libgp CXX C)

# if no option is given, standard is release
IF(NOT CMAKE_CONFIGURATION_TYPES AND NOT CMAKE_BUILD_TYPE)
   SET(CMAKE_BUILD_TYPE Release)
ENDIF(NOT CMAKE_CONFIGURATION_TYPES AND NOT CMAKE_BUILD_TYPE)

set(CMAKE_CXX_FLAGS_RELEASE "-DCLSQUARE -Wall -O2 -fPIC")
set(CMAKE_CXX_FLAGS_DEBUG "-DCLSQUARE -Wall -g -fPIC")

OPTION(BUILD_TESTS "Build tests" ON)
OPTION(BUILD_EXAMPLES "Build examples" ON)
OPTION(BUILD_FAST_FOOD "Build FastFood" OFF)
OPTION(BUILD_BENCHMARK "Build Benchmark tests" OFF)

SET(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_MODULE_PATH})

FIND_PACKAGE(Eigen3 3.0.1 REQUIRED)

# ----- Add include directories -----
INCLUDE_DIRECTORIES(${EIGEN3_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/include)

# ----- Add sources -----
INCLUDE("Sources.cmake")

# ----- Add library target -----
IF(NOT BUILD_FAST_FOOD)
  IF(BUILD_BENCHMARK)
    ADD_DEFINITIONS(-DBUILD_BENCHMARK)
  	ADD_LIBRARY(gp ${LIBGP_SRC} ${LIBGP_INTERFACES} ${BENCHMARK_SRC} ${BENCHMARK_INTERFACES})
  ELSE(BUILD_BENCHMARK)
	ADD_LIBRARY(gp ${LIBGP_SRC} ${LIBGP_INTERFACES})
  ENDIF(BUILD_BENCHMARK)
ENDIF()
IF(BUILD_FAST_FOOD)
  ADD_DEFINITIONS(-DBUILD_FAST_FOOD)
  FIND_PACKAGE(SpiralWHT REQUIRED)
  INCLUDE_DIRECTORIES(${SpiralWHT_INCLUDE_DIR})
  #LINK_DIRECTORIES(${SpiralWHT_INCLUDE_DIR})
  ADD_LIBRARY(gp ${LIBGP_SRC} ${LIBGP_INTERFACES} ${FAST_FOOD_SRC} ${FAST_FOOD_INTERFACES})
ENDIF()

# ----- Add example targets -----
IF(BUILD_EXAMPLES)
  ADD_SUBDIRECTORY(examples)
ENDIF()

# ----- Testing -----
IF(BUILD_TESTS)
  ADD_SUBDIRECTORY(tests)
ENDIF()

# ----- Benchmarks -----
IF(BUILD_BENCHMARK)
  ADD_SUBDIRECTORY(benchmarks)
ENDIF()

# ----- Install -----
INSTALL(FILES ${LIBGP_INTERFACES} DESTINATION include)
INSTALL(TARGETS gp
  RUNTIME DESTINATION bin
  LIBRARY DESTINATION lib
  ARCHIVE DESTINATION lib
)
IF(BUILD_FAST_FOOD)
  TARGET_LINK_LIBRARIES(gp ${SpiralWHT_INSTALLED_DIR}/lib/libwht.a)
ENDIF()